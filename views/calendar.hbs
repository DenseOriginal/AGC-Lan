<style>
  #calendar {
    padding: 32px;
    /* Change to 99.5% to show the box-shadow */
    width: clamp(570px, 99.5%, 800px);
    margin: auto;
  }

  .c-container {
    width: 100%;
    display: grid;
    place-items: center;
    overflow: auto;
    padding: 2px 0;
  }

  @media only screen and (max-width: 570px) {
    .fc-header-toolbar.fc-toolbar {
      flex-wrap: wrap-reverse;
      justify-content: flex-start !important;
    }

    .fc-toolbar-chunk:nth-of-type(1) {
      width: 100%;
    }

    .fc-toolbar-chunk:nth-of-type(2) {
      margin-left: 0 !important;
    }
  }

  #tooltip {
    position: absolute;
    top: -9999px;
    left: -9999px;
    z-index: 9999;
    padding: 4px 8px;
    box-sizing: border-box;
    max-width: 400px;
    word-break: break-word;
    hyphens: auto;
  }
</style>

<div class="c-container">
  <div id="calendar" class="card not-padding"></div>
</div>

<div id="tooltip" class="card not-padding">
  <p>Test</p>
</div>

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/locales/da.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css">
<link rel="stylesheet" href="styles/fc-variables.css">
<script>
  const tooltipEl = document.getElementById('tooltip');
  const calendarEl = document.getElementById('calendar');
  const calendar = new FullCalendar.Calendar(calendarEl, {
    initialView: 'dayGridMonth',
    locale: 'da',
    nowIndicator: true,
    headerToolbar: { center: 'dayGridMonth,timeGridWeek' }, // buttons for switching between views
    eventSources: [
      { url: '/api/calendar/lan', color: '#7bb28e', textColor: 'white' },
      { url: '/api/calendar/event', color: '#b27b8c', textColor: 'white' }
    ]
  });
  calendar.render();

  // TODO: Maybe actually do se users can mark the text, instead of it just dissapering
  // At the moment i'm too lazy to do it...
  calendar.on('eventMouseEnter', (event) => {
    const description = event.event.extendedProps.description;
    if(!description) return;

    const { pageX, pageY } = event.jsEvent;
    tooltipEl.innerHTML = `<p>${description}</p>`;

    const x = Math.min(window.innerWidth - tooltipEl.offsetWidth, pageX);
    const y = Math.min(window.innerHeight - tooltipEl.offsetHeight, pageY);
    tooltipEl.style.top = `${y}px`;
    tooltipEl.style.left = `${x}px`;
  });

  calendar.on('eventMouseLeave', (event) => {
    tooltipEl.style.top = '-99999px';
    tooltipEl.style.left = '-99999px';
  });
</script>